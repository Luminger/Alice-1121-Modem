/*
 * Note: this file originally auto-generated by mib2c using
 *  : mib2c.create-dataset.conf,v 5.3 2002/12/05 00:29:45 hardaker Exp $
 */
#ifndef ATMFORUM_HELPER_H
#define ATMFORUM_HELPER_H

#define DO_ATMFVCCTABLE            
#define DO_ATMFATMSERVICETYPETABLE 
#define DO_ATMFATMSERVICECONNINFOTABLE
#define DO_ATMFAAL5PROFILETABLE
#define DO_ATMFPORTTABLE
#define DO_ATMFATMLAYERTABLE
#define DO_ATMFATMSERVICETYPEEXTENSIONTABLE
/* augments: must be implemented */
#undef DO_ATMFATMSERVICECONNINFOEXTENSIONTABLE  


#undef DO_ATMFAAL1PROFILETABLE
#undef DO_ATMFAAL2LESPROFILETABLE
#undef DO_ATMFVPCABRTABLE
#undef DO_ATMFAAL2TRUNKINGPROFILETABLE
#undef DO_ATMFNETPREFIXTABLE
#undef DO_ATMFVCCABRTABLE
#undef DO_ATMFAAL34PROFILETABLE
#undef DO_ATMFSRVCREGTABLE
#undef DO_ATMFADDRESSREGISTRATIONADMINTABLE
#undef DO_ATMFATMSTATSTABLE
#undef DO_ATMFAAL5PROFILEEXTENSIONTABLE
#undef DO_ATMFAAL2COMMONPROFILETABLE
#undef DO_ATMFVPCTABLE
#undef DO_ATMFADDRESSTABLE

#define ATMF_DEF_PORT_INDEX                         0
#define ATMF_TRAFDESC_OIDLEN                        10
#define ATMF_NAME_LEN                               10
#define ATMF_DISPLAY_NAME_LEN                       32
#define ATMF_VCC_STATUS_UNKNOWN                     1
#define ATMF_VCC_STATUS_END2END_UP                  2
#define ATMF_VCC_STATUS_END2END_DOWN                3
#define ATMF_VCC_STATUS_LOCAL_UP_END2END_UNKNOWN    4
#define ATMF_VCC_STATUS_LOCAL_DOWN                  5
#define ATMF_DEF_TDT_PARAM                          0
#define ATMF_BEST_EFFORT_TRUE                       1
#define ATMF_BEST_EFFORT_FALSE                      2
#define ATMF_DEF_BEST_EFFORT                        ATMF_BEST_EFFORT_TRUE
#define ATMF_FRAME_DISCARD_TRUE                     1
#define ATMF_FRAME_DISCARD_FALSE                    2
#define ATMF_DEF_FRAME_DISCARD                      ATMF_FRAME_DISCARD_FALSE
#define ATMF_TDT_SERVICE_OTHER                      1
#define ATMF_TDT_SERVICE_CBR                        2
#define ATMF_TDT_SERVICE_RT_VBR                     3
#define ATMF_TDT_SERVICE_NRT_VBR                    4
#define ATMF_TDT_SERVICE_UBR                        6
#define ATMF_DEF_TDT_SERVICE_CAT                    ATMF_TDT_SERVICE_UBR
#define ATMF_NO_CLP_NO_SCR                          3
#define ATMF_NO_CLP_SCR                             6
#define ATMF_CLP_NO_TAGGING_SCR                     7
#define ATMF_CLP_TAGGING_SCR                        8
#define ATMF_CLP_NO_TAGGING_MCR                     9
#define ATMF_DEF_SERVICE_NAME                       "unknown"
#define ATMF_DEF_CONFORMANCE_DEF                    0   /* for none */
#define ATMF_DEF_SERVICE_SIGNAL_ID_VCCI             0
#define ATMF_DEF_SERVICE_SIGNAL_ID_VPCI             1
#define ATMF_CONN_AAL_TYPE_NONE                     0
#define ATMF_CONN_AAL_TYPE_AAL1                     1
#define ATMF_CONN_AAL_TYPE_AAL34                    2
#define ATMF_CONN_AAL_TYPE_AAL5                     3
#define ATMF_CONN_AAL_TYPE_OTHER                    4
#define ATMF_CONN_AAL_TYPE_UNKNOWN                  5
#define ATMF_CONN_AAL_TYPE_AAL2                     6
#define ATMF_AAL5_MAX_CPCS_SDU_SIZE                 65535
#define ATMF_AAL5_AAL_MODE_MESSAGE_ASSURED          0
#define ATMF_AAL5_AAL_MODE_MESSAGE_UNASSURED        1
#define ATMF_AAL5_AAL_MODE_STREAM_ASSURED           2
#define ATMF_AAL5_AAL_MODE_STREAM_UNASSURED         3
#define ATMF_AAL5_AAL_SSCS_NULL                     0
#define ATMF_AAL5_AAL_SSCS_DATA_ASSURED             1
#define ATMF_AAL5_AAL_SSCS_DATA_NONASSURED          2
#define ATMF_AAL5_AAL_SSCS_FRAMERELAY               3
#define ATMF_SERVICE_PHY_MAC_ID_SINGLE_LATENCY      0
#define ATMF_SERVICE_PHY_MAC_ID_BOTH_INTERLEAVE     1
#define ATMF_SERVICE_PHY_MAC_ID_BOTH_FAST           2
#define ATMF_SERVICE_PHY_MAC_ID_UP_INTERLEAVE_DN_FAST   3
#define ATMF_SERVICE_PHY_MAC_ID_UP_FAST_DN_INTERLEAVE   4
#define ATMF_SERVICE_LAYER2_PROTOCOL_DEF            "0C"  /* llc */
#define ATMF_SERVICE_LAYER3_PROTOCOL_DEF            "0B800080C20007" /* bridge, no fcs */

#define ATMF_ATMLAYER_UNI_TYPE_PUBLIC               1
#define ATMF_ATMLAYER_UNI_TYPE_PRIVATE              2
#define ATMF_ATMLAYER_UNI_VERSION_3_POINT_1         3
#define ATMF_ATMLAYER_UNI_VERSION_4_POINT_0         4
#define ATMF_ATMLAYER_UNI_VERSION_UNSUPPORTED       5
#define ATMF_ATMLAYER_DEVICE_TYPE_USER              1
#define ATMF_ATMLAYER_DEVICE_TYPE_NODE              2
#define ATMF_ATMLAYER_ILMI_VERSION_4_POINT_0        2
#define ATMF_ATMLAYER_NNISIG_VERSION_UNSUPPORTED    1
#define ATMF_ATMLAYER_NNISIG_VERSION_IISP           2
#define ATMF_ATMLAYER_MAX_SVPC_VPI                  0
#define ATMF_ATMLAYER_MAX_SVCC_VPI                  0
#define ATMF_ATMLAYER_MAX_SVCC_VCI                  0


/*
 * column number definitions for table atmfAAL1ProfileTable
 */
typedef struct atmForumMib_atmfAAL1ProfileTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL1ProfileIndex;
    int             atmfAAL1Subtype;
    int             atmfAAL1CBRRate;
    int             atmfAAL1ClkRecoveryType;
    int             atmfAAL1FEC;
    int             atmfAAL1SDT;
    int             atmfAAL1PartiallyFilledCells;
    int             atmfAAL1CellLossIntegrPeriod;
    struct atmForumMib_atmfAAL1ProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL1PROFILETABLE, *pATM_FORUM_MIB_ATMFAAL1PROFILETABLE;
/*
 * column number definitions for table atmfAAL2LESProfileTable
 */
typedef struct atmForumMib_atmfAAL2LESProfileTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL2CpsCIDLowerLimit;
    int             atmfAAL2CpsCIDUpperLimit;
    int             atmfAAL2CpsOptimisation;
    struct atmForumMib_atmfAAL2LESProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL2LESPROFILETABLE,
    *pATM_FORUM_MIB_ATMFAAL2LESPROFILETABLE;
/*
 * column number definitions for table atmfAtmServiceTypeTable
 */
typedef struct atmForumMib_atmfAtmServiceTypeTable {
    void           *pTableBeginning;

    int             atmfAtmServiceTypeIndex;
    unsigned char   atmfAtmServiceProviderName[ATMF_DISPLAY_NAME_LEN];
    long            atmfAtmServiceProviderName_len;
    unsigned char   atmfAtmServiceName[ATMF_DISPLAY_NAME_LEN];
    long            atmfAtmServiceName_len;
    unsigned char   atmfAtmServiceSubName[ATMF_DISPLAY_NAME_LEN];
    long            atmfAtmServiceSubName_len;
    unsigned char   atmfAtmServiceClient[ATMF_DISPLAY_NAME_LEN];
    long            atmfAtmServiceClient_len;
    int             atmfAtmServiceTMCategory;
    int             atmfAtmServiceTMConformanceDef;
    struct atmForumMib_atmfAtmServiceTypeTable *next;
} ATM_FORUM_MIB_ATMFATMSERVICETYPETABLE,
    *pATM_FORUM_MIB_ATMFATMSERVICETYPETABLE;
/*
 * column number definitions for table atmfVpcAbrTable
 */
typedef struct atmForumMib_atmfVpcAbrTable {
    void           *pTableBeginning;
    int             index;

    int             atmfVpcAbrPortIndex;
    int             atmfVpcAbrVpi;
    int             atmfVpcAbrTransmitIcr;
    int             atmfVpcAbrTransmitNrm;
    int             atmfVpcAbrTransmitTrm;
    int             atmfVpcAbrTransmitCdf;
    int             atmfVpcAbrTransmitRif;
    int             atmfVpcAbrTransmitRdf;
    int             atmfVpcAbrTransmitAdtf;
    int             atmfVpcAbrTransmitCrm;
    struct atmForumMib_atmfVpcAbrTable *next;
} ATM_FORUM_MIB_ATMFVPCABRTABLE, *pATM_FORUM_MIB_ATMFVPCABRTABLE;
/*
 * column number definitions for table atmfAAL2TrunkingProfileTable
 */
typedef struct atmForumMib_atmfAAL2TrunkingProfileTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL2Vcci;
    int             atmfAAL2SignalingVcci;
    struct atmForumMib_atmfAAL2TrunkingProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL2TRUNKINGPROFILETABLE,
    *pATM_FORUM_MIB_ATMFAAL2TRUNKINGPROFILETABLE;
/*
 * column number definitions for table atmfAtmServiceConnInfoTable
 */
typedef struct atmForumMib_atmfAtmServiceConnInfoTable {
    void           *pTableBeginning;

    int             atmfAtmServicePortIndex;
    int             atmfAtmServiceVpi;
    int             atmfAtmServiceVci;
    int             atmfAtmServiceSignalId;
    int             atmfAtmServiceConnServiceIndex;
    unsigned char   atmfAtmServiceConnName[255];
    long            atmfAtmServiceConnName_len;
    int             atmfAtmServiceConnAALType;
    int             atmfAtmServiceConnAALIndex;
    struct atmForumMib_atmfAtmServiceConnInfoTable *next;
} ATM_FORUM_MIB_ATMFATMSERVICECONNINFOTABLE,
    *pATM_FORUM_MIB_ATMFATMSERVICECONNINFOTABLE;
/*
 * column number definitions for table atmfNetPrefixTable
 */
typedef struct atmForumMib_atmfNetPrefixTable {
    void           *pTableBeginning;
    int             index;

    int             atmfNetPrefixPort;
    unsigned char   atmfNetPrefixPrefix[65535];
    long            atmfNetPrefixPrefix_len;
    int             atmfNetPrefixStatus;
    struct atmForumMib_atmfNetPrefixTable *next;
} ATM_FORUM_MIB_ATMFNETPREFIXTABLE, *pATM_FORUM_MIB_ATMFNETPREFIXTABLE;
/*
 * column number definitions for table atmfVccAbrTable
 */
typedef struct atmForumMib_atmfVccAbrTable {
    void           *pTableBeginning;
    int             index;

    int             atmfVccAbrPortIndex;
    int             atmfVccAbrVpi;
    int             atmfVccAbrVci;
    int             atmfVccAbrTransmitIcr;
    int             atmfVccAbrTransmitNrm;
    int             atmfVccAbrTransmitTrm;
    int             atmfVccAbrTransmitCdf;
    int             atmfVccAbrTransmitRif;
    int             atmfVccAbrTransmitRdf;
    int             atmfVccAbrTransmitAdtf;
    int             atmfVccAbrTransmitCrm;
    struct atmForumMib_atmfVccAbrTable *next;
} ATM_FORUM_MIB_ATMFVCCABRTABLE, *pATM_FORUM_MIB_ATMFVCCABRTABLE;
/*
 * column number definitions for table atmfAAL5ProfileTable
 */
typedef struct atmForumMib_atmfAAL5ProfileTable {
    void           *pTableBeginning;

    int             atmfAAL5ProfileIndex;
    int             atmfAAL5MaxCpcsSduSizeForward;
    int             atmfAAL5MaxCpcsSduSizeBackward;
    int             atmfAAL5AALMode;
    int             atmfAAL5SscsType;
    struct atmForumMib_atmfAAL5ProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL5PROFILETABLE, *pATM_FORUM_MIB_ATMFAAL5PROFILETABLE;
/*
 * column number definitions for table atmfAtmServiceConnInfoExtensionTable
 */
typedef struct atmForumMib_atmfAtmServiceConnInfoExtensionTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAtmServicePhyMacIdentifier;
    struct atmForumMib_atmfAtmServiceConnInfoExtensionTable *next;
} ATM_FORUM_MIB_ATMFATMSERVICECONNINFOEXTENSIONTABLE,
    *pATM_FORUM_MIB_ATMFATMSERVICECONNINFOEXTENSIONTABLE;
/*
 * column number definitions for table atmfAAL34ProfileTable
 */
typedef struct atmForumMib_atmfAAL34ProfileTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL34ProfileIndex;
    int             atmfAAL34MaxCpcsSduSizeForward;
    int             atmfAAL34MaxCpcsSduSizeBackward;
    int             atmfAAL34MIDRangeLow;
    int             atmfAAL34MIDRangeHigh;
    int             atmfAAL34AALMode;
    int             atmfAAL34SscsType;
    struct atmForumMib_atmfAAL34ProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL34PROFILETABLE,
    *pATM_FORUM_MIB_ATMFAAL34PROFILETABLE;
/*
 * column number definitions for table atmfSrvcRegTable
 */
typedef struct atmForumMib_atmfSrvcRegTable {
    void           *pTableBeginning;
    int             index;

    int             atmfSrvcRegPort;
    oid             atmfSrvcRegServiceID[MAX_OID_LEN];
    int             atmfSrvcRegServiceID_len;
    unsigned char   atmfSrvcRegATMAddress[65535];
    long            atmfSrvcRegATMAddress_len;
    int             atmfSrvcRegAddressIndex;
    unsigned char   atmfSrvcRegParm1[65535];
    long            atmfSrvcRegParm1_len;
    struct atmForumMib_atmfSrvcRegTable *next;
} ATM_FORUM_MIB_ATMFSRVCREGTABLE, *pATM_FORUM_MIB_ATMFSRVCREGTABLE;
/*
 * column number definitions for table atmfAddressRegistrationAdminTable
 */
typedef struct atmForumMib_atmfAddressRegistrationAdminTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAddressRegistrationAdminIndex;
    int             atmfAddressRegistrationAdminStatus;
    struct atmForumMib_atmfAddressRegistrationAdminTable *next;
} ATM_FORUM_MIB_ATMFADDRESSREGISTRATIONADMINTABLE,
    *pATM_FORUM_MIB_ATMFADDRESSREGISTRATIONADMINTABLE;
/*
 * column number definitions for table atmfAtmStatsTable
 */
typedef struct atmForumMib_atmfAtmStatsTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAtmStatsIndex;
    unsigned int    atmfAtmStatsReceivedCells;
    unsigned int    atmfAtmStatsDroppedReceivedCells;
    unsigned int    atmfAtmStatsTransmittedCells;
    struct atmForumMib_atmfAtmStatsTable *next;
} ATM_FORUM_MIB_ATMFATMSTATSTABLE, *pATM_FORUM_MIB_ATMFATMSTATSTABLE;
/*
 * column number definitions for table atmfAAL5ProfileExtensionTable
 */
typedef struct atmForumMib_atmfAAL5ProfileExtensionTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL5Vcci;
    struct atmForumMib_atmfAAL5ProfileExtensionTable *next;
} ATM_FORUM_MIB_ATMFAAL5PROFILEEXTENSIONTABLE,
    *pATM_FORUM_MIB_ATMFAAL5PROFILEEXTENSIONTABLE;
/*
 * column number definitions for table atmfAAL2CommonProfileTable
 */
typedef struct atmForumMib_atmfAAL2CommonProfileTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAAL2ProfileIndex;
    int             atmfAAL2ApplicationIdentifier;
    int             atmfAAL2ConfigResponsibility;
    int             atmfAAL2CpsMaxMultiplexedChannels;
    int             atmfAAL2CpsMaxSduLength;
    int             atmfAAL2SscsMaxSssarSduLength;
    int             atmfAAL2SscsSstedStatus;
    int             atmfAAL2SscsSsadtStatus;
    int             atmfAAL2SscsServiceCategory;
    int             atmfAAL2SscsAudioServiceTransport;
    int             atmfAAL2SscsProfileSource;
    int             atmfAAL2SscsIeeeOui;
    int             atmfAAL2SscsPredefinedProfileIdentifier;
    int             atmfAAL2SscsPcmEncoding;
    int             atmfAAL2SscsFaxDemodulationTransport;
    int             atmfAAL2SscsCasSignalingTransport;
    int             atmfAAL2SscsDtmfDigitPacketTransport;
    int             atmfAAL2SscsMfR1DigitPacketTransport;
    int             atmfAAL2SscsMfR2DigitPacketTransport;
    int             atmfAAL2SscsCircuitModeDataTransport;
    int             atmfAAL2SscsCircuitModeDataNumChannels;
    int             atmfAAL2SscsFrameModeDataTransport;
    int             atmfAAL2SscsFrameModeDataMaxLength;
    int             atmfAAL2SscopSduLength;
    int             atmfAAL2SscopUuFieldLength;
    struct atmForumMib_atmfAAL2CommonProfileTable *next;
} ATM_FORUM_MIB_ATMFAAL2COMMONPROFILETABLE,
    *pATM_FORUM_MIB_ATMFAAL2COMMONPROFILETABLE;
/*
 * column number definitions for table atmfVpcTable
 */
typedef struct atmForumMib_atmfVpcTable {
    void           *pTableBeginning;
    int             index;

    int             atmfVpcPortIndex;
    int             atmfVpcVpi;
    int             atmfVpcOperStatus;
    oid             atmfVpcTransmitTrafficDescriptorType[MAX_OID_LEN];
    int             atmfVpcTransmitTrafficDescriptorType_len;
    int             atmfVpcTransmitTrafficDescriptorParam1;
    int             atmfVpcTransmitTrafficDescriptorParam2;
    int             atmfVpcTransmitTrafficDescriptorParam3;
    int             atmfVpcTransmitTrafficDescriptorParam4;
    int             atmfVpcTransmitTrafficDescriptorParam5;
    oid             atmfVpcReceiveTrafficDescriptorType[MAX_OID_LEN];
    int             atmfVpcReceiveTrafficDescriptorType_len;
    int             atmfVpcReceiveTrafficDescriptorParam1;
    int             atmfVpcReceiveTrafficDescriptorParam2;
    int             atmfVpcReceiveTrafficDescriptorParam3;
    int             atmfVpcReceiveTrafficDescriptorParam4;
    int             atmfVpcReceiveTrafficDescriptorParam5;
    int             atmfVpcQoSCategory;
    int             atmfVpcTransmitQoSClass;
    int             atmfVpcReceiveQoSClass;
    int             atmfVpcBestEffortIndicator;
    int             atmfVpcServiceCategory;
    struct atmForumMib_atmfVpcTable *next;
} ATM_FORUM_MIB_ATMFVPCTABLE, *pATM_FORUM_MIB_ATMFVPCTABLE;
/*
 * column number definitions for table atmfAtmLayerTable
 */
typedef struct atmForumMib_atmfAtmLayerTable {
    void           *pTableBeginning;

    int             atmfAtmLayerIndex;
    int             atmfAtmLayerMaxVPCs;
    int             atmfAtmLayerMaxVCCs;
    int             atmfAtmLayerConfiguredVPCs;
    int             atmfAtmLayerConfiguredVCCs;
    int             atmfAtmLayerMaxVpiBits;
    int             atmfAtmLayerMaxVciBits;
    int             atmfAtmLayerUniType;
    int             atmfAtmLayerUniVersion;
    int             atmfAtmLayerDeviceType;
    int             atmfAtmLayerIlmiVersion;
    int             atmfAtmLayerNniSigVersion;
    int             atmfAtmLayerMaxSvpcVpi;
    int             atmfAtmLayerMaxSvccVpi;
    int             atmfAtmLayerMinSvccVci;
    struct atmForumMib_atmfAtmLayerTable *next;
} ATM_FORUM_MIB_ATMFATMLAYERTABLE, *pATM_FORUM_MIB_ATMFATMLAYERTABLE;
/*
 * column number definitions for table atmfAddressTable
 */
typedef struct atmForumMib_atmfAddressTable {
    void           *pTableBeginning;
    int             index;

    int             atmfAddressPort;
    unsigned char   atmfAddressAtmAddress[65535];
    long            atmfAddressAtmAddress_len;
    int             atmfAddressStatus;
    int             atmfAddressOrgScope;
    struct atmForumMib_atmfAddressTable *next;
} ATM_FORUM_MIB_ATMFADDRESSTABLE, *pATM_FORUM_MIB_ATMFADDRESSTABLE;
/*
 * column number definitions for table atmfPortTable
 */
typedef struct atmForumMib_atmfPortTable {
    void           *pTableBeginning;

    int             atmfPortIndex;
    unsigned char   atmfPortMyIfName[ATMF_NAME_LEN];
    long            atmfPortMyIfName_len;
    int             atmfPortMyIfIdentifier;
    struct atmForumMib_atmfPortTable *next;
} ATM_FORUM_MIB_ATMFPORTTABLE, *pATM_FORUM_MIB_ATMFPORTTABLE;
/*
 * column number definitions for table atmfVccTable
 */
typedef struct atmForumMib_atmfVccTable {
    void           *pTableBeginning;
    //int             index;

    int             atmfVccPortIndex;
    int             atmfVccVpi;
    int             atmfVccVci;
    int             atmfVccOperStatus;
    oid             atmfVccTransmitTrafficDescriptorType[ATMF_TRAFDESC_OIDLEN];
    int             atmfVccTransmitTrafficDescriptorType_len;
    int             atmfVccTransmitTrafficDescriptorParam1;
    int             atmfVccTransmitTrafficDescriptorParam2;
    int             atmfVccTransmitTrafficDescriptorParam3;
    int             atmfVccTransmitTrafficDescriptorParam4;
    int             atmfVccTransmitTrafficDescriptorParam5;
    oid             atmfVccReceiveTrafficDescriptorType[ATMF_TRAFDESC_OIDLEN];
    int             atmfVccReceiveTrafficDescriptorType_len;
    int             atmfVccReceiveTrafficDescriptorParam1;
    int             atmfVccReceiveTrafficDescriptorParam2;
    int             atmfVccReceiveTrafficDescriptorParam3;
    int             atmfVccReceiveTrafficDescriptorParam4;
    int             atmfVccReceiveTrafficDescriptorParam5;
    int             atmfVccQoSCategory;
    int             atmfVccTransmitQoSClass;
    int             atmfVccReceiveQoSClass;
    int             atmfVccBestEffortIndicator;
    int             atmfVccTransmitFrameDiscard;
    int             atmfVccReceiveFrameDiscard;
    int             atmfVccServiceCategory;
    struct atmForumMib_atmfVccTable *next;
} ATM_FORUM_MIB_ATMFVCCTABLE, *pATM_FORUM_MIB_ATMFVCCTABLE;
/*
 * column number definitions for table atmfAtmServiceTypeExtensionTable
 */
typedef struct atmForumMib_atmfAtmServiceTypeExtensionTable {
    void           *pTableBeginning;
    int             index;
    unsigned char   atmfAtmServiceLayer2ProtocolId[16];
    long            atmfAtmServiceLayer2ProtocolId_len;
    unsigned char   atmfAtmServiceLayer3ProtocolId[16];
    long            atmfAtmServiceLayer3ProtocolId_len;
    struct atmForumMib_atmfAtmServiceTypeExtensionTable *next;
} ATM_FORUM_MIB_ATMFATMSERVICETYPEEXTENSIONTABLE,
    *pATM_FORUM_MIB_ATMFATMSERVICETYPEEXTENSIONTABLE;

/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL1ProfileTable
(ATM_FORUM_MIB_ATMFAAL1PROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL2LESProfileTable
(ATM_FORUM_MIB_ATMFAAL2LESPROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmServiceTypeTable
(ATM_FORUM_MIB_ATMFATMSERVICETYPETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfVpcAbrTable(ATM_FORUM_MIB_ATMFVPCABRTABLE *
                                      pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL2TrunkingProfileTable
(ATM_FORUM_MIB_ATMFAAL2TRUNKINGPROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmServiceConnInfoTable
(ATM_FORUM_MIB_ATMFATMSERVICECONNINFOTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfNetPrefixTable(ATM_FORUM_MIB_ATMFNETPREFIXTABLE *
                                         pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfVccAbrTable(ATM_FORUM_MIB_ATMFVCCABRTABLE *
                                      pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL5ProfileTable
(ATM_FORUM_MIB_ATMFAAL5PROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmServiceConnInfoExtensionTable
(ATM_FORUM_MIB_ATMFATMSERVICECONNINFOEXTENSIONTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL34ProfileTable
(ATM_FORUM_MIB_ATMFAAL34PROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfSrvcRegTable(ATM_FORUM_MIB_ATMFSRVCREGTABLE *
                                       pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAddressRegistrationAdminTable
(ATM_FORUM_MIB_ATMFADDRESSREGISTRATIONADMINTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmStatsTable(ATM_FORUM_MIB_ATMFATMSTATSTABLE *
                                        pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL5ProfileExtensionTable
(ATM_FORUM_MIB_ATMFAAL5PROFILEEXTENSIONTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAAL2CommonProfileTable
(ATM_FORUM_MIB_ATMFAAL2COMMONPROFILETABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfVpcTable(ATM_FORUM_MIB_ATMFVPCTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmLayerTable(ATM_FORUM_MIB_ATMFATMLAYERTABLE *
                                        pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAddressTable(ATM_FORUM_MIB_ATMFADDRESSTABLE *
                                       pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfPortTable(ATM_FORUM_MIB_ATMFPORTTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfVccTable(ATM_FORUM_MIB_ATMFVCCTABLE * pTable);
/*
 * Fill out the ATM interface configuration table 
 */
void           
atmForumMibHelper_fillatmfAtmServiceTypeExtensionTable
(ATM_FORUM_MIB_ATMFATMSERVICETYPEEXTENSIONTABLE * pTable);

int atmForumMibHelper_getServiceTypeCount(void);
int atmMibHelper_getTotalVccCount(void);
int getAtmCellIfIndex( void );
#endif                          /* ATMFORUM_HELPER_H */
