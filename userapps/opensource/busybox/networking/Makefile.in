# Makefile for busybox
#
# Copyright (C) 1999-2004 by Erik Andersen <andersen@codepoet.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

NETWORKING_AR:=networking.a 
ifndef $(NETWORKING_DIR)
NETWORKING_DIR:=$(top_builddir)/networking/
endif
srcdir=$(top_srcdir)/networking
NETWORKING-y:=
NETWORKING-$(CONFIG_ARPING)	+= arping.o
NETWORKING-$(CONFIG_FTPGET)	+= ftpgetput.o
NETWORKING-$(CONFIG_FTPPUT)	+= ftpgetput.o
NETWORKING-$(CONFIG_HOSTNAME)	+= hostname.o
NETWORKING-$(CONFIG_HTTPD)	+= httpd.o
NETWORKING-$(CONFIG_IFCONFIG)	+= ifconfig.o
NETWORKING-$(CONFIG_IFUPDOWN)	+= ifupdown.o
NETWORKING-$(CONFIG_INETD)      += inetd.o
NETWORKING-$(CONFIG_IP)		+= ip.o
NETWORKING-$(CONFIG_IPCALC)	+= ipcalc.o
NETWORKING-$(CONFIG_IPADDR)	+= ipaddr.o
NETWORKING-$(CONFIG_IPLINK)	+= iplink.o
NETWORKING-$(CONFIG_IPROUTE)	+= iproute.o
NETWORKING-$(CONFIG_IPTUNNEL)	+= iptunnel.o
NETWORKING-$(CONFIG_NAMEIF)	+= nameif.o
NETWORKING-$(CONFIG_NC)		+= nc.o
NETWORKING-$(CONFIG_NETSTAT)	+= netstat.o
NETWORKING-$(CONFIG_NSLOOKUP)	+= nslookup.o
NETWORKING-$(CONFIG_PING)	+= ping.o
NETWORKING-$(CONFIG_PING6)	+= ping6.o
NETWORKING-$(CONFIG_ROUTE)	+= route.o
NETWORKING-$(CONFIG_TELNET)	+= telnet.o
NETWORKING-$(CONFIG_TELNETD)	+= telnetd.o
NETWORKING-$(CONFIG_TRACEROUTE)	+= traceroute.o
NETWORKING-$(CONFIG_VCONFIG)	+= vconfig.o
NETWORKING-$(CONFIG_WGET)	+= wget.o

libraries-y+=$(NETWORKING_DIR)$(NETWORKING_AR)

needcrypt-y:=
needcrypt-$(CONFIG_FEATURE_HTTPD_AUTH_MD5) := y

ifeq ($(needcrypt-y),y)
  LIBRARIES += -lcrypt
endif

# BRCM Begin
NETWORKING-$(CONFIG_SENDARP)	+= sendarp.o
#NETWORKING-$(CONFIG_TFTP)		+= tftpd.o
#NETWORKING-$(CONFIG_TFTPD)		+= tftp.o

CFLAGS += -I$(INC_BRCMDRIVER_PUB_PATH)/bcm963xx -I$(INC_BRCMSHARED_PUB_PATH)/$(BRCM_BOARD) -I$(INC_BRCMCFM_PATH) -I$(BROADCOM_CFM_DIR)/util/psi \
-I$(INC_BRCMDRIVER_PRIV_PATH)/bcm963xx
CFLAGS += ${BRCM_DRIVER_ATM_BONDING_DEFINES}
BOARD_API_SRC=$(BROADCOM_CFM_DIR)/util/psi/board_api.c
SYSCALL_SRC=$(BROADCOM_CFM_DIR)/util/system/syscall.c	
SYSKILL_SRC=$(BROADCOM_CFM_DIR)/util/system/syskill.c	
#FWSYSCALL_SRC=$(OPENSOURCE_DIR)/ftpd/fwsyscall.c

BOARD_API_OBJ=$(NETWORKING_DIR)board_api.o
SYSCALL_OBJ=$(NETWORKING_DIR)syscall.o
SYSKILL_OBJ=$(NETWORKING_DIR)syskill.o
#FWSYSCALL_OBJ=$(NETWORKING_DIR)fwsyscall.o

$(BOARD_API_OBJ):	$(BOARD_API_SRC) $(INC_BRCMCFM_PATH)/board_api.h
	$(CC) $(CFLAGS) -c $(BOARD_API_SRC) -o $(BOARD_API_OBJ)
$(SYSCALL_OBJ):		$(SYSCALL_SRC) $(INC_BRCMCFM_PATH)/syscall.h
	$(CC) $(CFLAGS)  -c $(SYSCALL_SRC) -o $(SYSCALL_OBJ)
$(SYSKILL_OBJ):		$(SYSKILL_SRC) $(INC_BRCMCFM_PATH)/syscall.h
	$(CC) $(CFLAGS)  -c $(SYSKILL_SRC) -o $(SYSKILL_OBJ)
#$(FWSYSCALL_OBJ):	$(FWSYSCALL_SRC) $(OPENSOURCE_DIR)/ftpd/fwsyscall.h
#	$(CC) $(CFLAGS) -c $(FWSYSCALL_SRC) -o $(FWSYSCALL_OBJ)
# BRCM End

$(NETWORKING_DIR)$(NETWORKING_AR): $(patsubst %,$(NETWORKING_DIR)%, $(NETWORKING-y)) \
		$(BOARD_API_OBJ) $(SYSCALL_OBJ) $(SYSKILL_OBJ)
	$(AR) -ro $@ $(patsubst %,$(NETWORKING_DIR)%, $(NETWORKING-y)) $(BOARD_API_OBJ) $(SYSCALL_OBJ) $(SYSKILL_OBJ)

$(NETWORKING_DIR)%.o: $(srcdir)/%.c
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c -o $@ $<

